'''
Автор скрипта: Vladislav-Argun
Ссылка на Git: https://github.com/Vladislav-Argun/AADSIP.git
'''
# 1. Написать программу, которая будет складывать, вычитать, 
# умножать или делить два числа. Числа и знак операции вводятся пользователем.
# После выполнения вычисления программа не завершается, 
# а запрашивает новые данные для вычислений. 
# Завершение программы должно выполняться 
# при вводе символа '0' в качестве знака операции. 
# Если пользователь вводит неверный знак (не '0', '+', '-', '', '/'),
# программа должна сообщать об ошибке и снова запрашивать знак операции.
# Также она должна сообщать пользователю о невозможности деления на ноль,
# если он ввел его в качестве делителя.
from os import system
cmd = None
while cmd != '0':
	n1 = int(input('Введите первое число: '))
	cmd = input('Что будем делать? (+ - * /): ')
	n2 = int(input('Введите второе число: '))
	system('cls')
	if cmd == '+':
		print(f'Ответ: {n1 + n2}')
	elif cmd == '-':
		print(f'Ответ: {n1 - n2}')
	elif cmd == '*':
		print(f'Ответ: {n1 * n2}')
	elif cmd == '/':
		if n2 != 0:
			print(f'Ответ: {n1 / n2}')
		else:
			print('Ошибка! На нуль делить нельзя!')
	else:
		print('Ошибка! Вы не ввели операцию (+ - * /)!\nЧтобы выйти, ведите 0 в операции.')

# вариант 2
cmd = None
cmds = ['+', '-', '', '/']
while cmd != '0':
	n1 = int(input('Введите первое число: '))
	cmd = input('Что будем делать? (+ - * /): ')
	n2 = int(input('Введите второе число: '))
	if cmd in cmds:
		try:
			print(eval(str(n1) + cmd + str(n2)))
		except ZeroDivisionError:
			print('На нуль делить нельзя!')
# в итог беру вариант 2, он короче, удобнее, и без всяких там else, и elif

# 2. Посчитать четные и нечетные цифры введенного натурального числа. 
# Например, если введено число 34560, в нем 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).
n = int(input('Введите число: '))
even = odd = 0
while n > 0:
	# проверим делится ли оно на 2 без остатка, если делится то оно чётное, запишем в переменную
    if n % 2 == 0:
        even += 1
    # иначе оно нечётное, запишем в переменную
    else:
        odd += 1
    n = n // 10
print(f"четных - {even}\nнечетных - {odd}")

# 3. Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран. 
# Например, если введено число 3486, надо вывести 6843.
n1 = int(input("Введите целое число: "))
n2 = 0
while n1 > 0:
    # находим остаток - последнюю цифру
    digit = n1 % 10
    # делим нацело - удаляем последнюю цифру
    n1 //= 10
    # увеличиваем разрядность второго числа
    n2 *= 10
    # добавляем очередную цифру
    n2 += digit  
 
print('Результат:', n2)

# 4. Найти сумму n элементов следующего ряда чисел: 1, -0.5, 0.25, -0.125,… 
# Количество элементов (n) вводится с клавиатуры.
n = int(input(key))

# 5. Вывести на экран коды и символы таблицы ASCII, 
# начиная с символа под номером 32 и заканчивая 127-м включительно. 
# Вывод выполнить в табличной форме: по десять пар «код-символ» в каждой строке.


# 6. В программе генерируется случайное целое число от 0 до 100. 
# Пользователь должен его отгадать не более чем за 10 попыток. 
# После каждой неудачной попытки должно сообщаться,
# больше или меньше введенное пользователем число,
# чем то, что загадано. Если за 10 попыток число 
# не отгадано, вывести ответ.


# 7. Написать программу, доказывающую или проверяющую,
# что для множества натуральных чисел выполняется равенство:
# 1+2+...+n = n(n+1)/2, где n — любое натуральное число.


# 8. Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел. 
# Количество вводимых чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.


# 9. Среди натуральных чисел, которые были введены, найти наибольшее по сумме цифр. 
# Вывести на экран это число и сумму его цифр.